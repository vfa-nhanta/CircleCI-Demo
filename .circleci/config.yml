version: 2
jobs:
  node:
    docker:
      - image: circleci/node:8
    steps:
      - restore_cache:                #Kiểm tra file cache tương ứng với package-lock.json
          keys: 
            - node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
            - node-v1-{{ .Branch }}-
            - node-v1-
      - checkout
      - run: npm install
      - save_cache:                   #Lưu file cache
          key: node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths: 
            - ~/usr/local/lib/node_modules
  android:
    docker:
      - image: circleci/android:api-27-node8-alpha
    steps:
      - checkout
      - run: npm install
      - run: echo 'export KEYSTORE=${pwd}/signing.jks' >> $BASH_ENV
      - run: sh .circleci/download.sh
      - run: cd android && ./gradlew assembleRelease
      - run: 
          command: |
            echo "my artifact file" > /tmp/artifact-1;
            mkdir /tmp/artifacts;
            echo "my artifact files in a dir" > /tmp/artifacts/artifact-2;
      - store_artifacts:      #sau khi chạy thành công, store_artifacts tạo ra file /tmp/artifact-1 và folder /tmp/artifacts
          path: ./android/app/build/outputs
  ios:
    macos:
      xcode: "9.4.1"
# use a --login shell so our "set Ruby version" command gets picked up for later steps
      shell: /bin/bash --login -o pipefail
    steps:
      - checkout
      - run: npm install
      - run: xcodebuild -project ios/TestV12BankingApp.xcodeproj -scheme "TestV12BankingApp" -sdk iphonesimulator -destination 'platform=iOS Simulator,OS=9.0,name=iPhone X'
workflows:
  version: 2
  node-android-ios:
    jobs:
      - node
      - android:
          requires:
            - node
      - ios:
          requires:
            - node
      - hold:               #Sau khi chạy thành công android, job sẽ dừng lại chờ approval trước khi chạy tiếp.
          type: approval
          requires:
            - android
      - deploy:
          requires:
            - hold

# version: 2.1
# jobs:
#   build:
#     docker:
#       - image: debian:stretch
#     steps:
#       - checkout
#       - run:
#           name: Test
#           command: echo Hello, world.
#       - run:
#           name: Print the Current Time
#           command: date
